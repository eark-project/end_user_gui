@model end_user_gui.Models.Archive

@functions{
    string SizeString(long size)
    {
        var vals = new List<KeyValuePair<long, string>>();
        vals.Add(new KeyValuePair<long, string>(1125899906842624, "PB"));
        vals.Add(new KeyValuePair<long, string>(1099511627776, "TB"));
        vals.Add(new KeyValuePair<long, string>(1073741824, "GB"));
        vals.Add(new KeyValuePair<long, string>(1048576, "MB"));
        vals.Add(new KeyValuePair<long, string>(1024, "KB"));
        //vals.Add(new KeyValuePair<long,string>(0,"B"));

        foreach (var kvp in vals)
        {
            if (size >= kvp.Key)
                return string.Format("{0} {1}",
                    Math.Round((double)size / (double)kvp.Key),
                    kvp.Value
                    );
        }
        return string.Format("{0} B", size);
    }
}
@if (Model.Metadata != null)
{
    if (!string.IsNullOrEmpty(Model.Metadata.UnitDate) || !string.IsNullOrEmpty(Model.Metadata.CreatedBy))
    {
        <div class="row" style="margin-top:5px;margin-bottom:5px;">
            <div class="col-md-1" style="text-align:left"><b>Creator</b></div>
            <div class="col-md-5" style="text-align:left">@Model.Metadata.CreatedBy</div>
            <div class="col-md-1" style="text-align:left"><b>Date</b></div>
            <div class="col-md-5" style="text-align:left">@Model.Metadata.UnitDate</div>
        </div>
    }
    if (!string.IsNullOrEmpty(Model.Metadata.Description))
    {
        <div class="row">
            <div class="col-md-1" style="text-align:left"><b>Descr.</b></div>
            <div class="col-md-11 col-md-offset-0" style="text-align:left">

                @{ var maxLength = 400; }
                @Model.Metadata.Description.Substring(0, Math.Min(Model.Metadata.Description.Length, maxLength))
                @if (Model.Metadata.Description.Length > maxLength)
                {
                    <span>&nbsp;&nbsp;...</span>
                    <button type="button" class="btn btn-md btn-block" data-toggle="modal" data-target="#cell_@Model.ReferenceCode" style="right:0">
                        <span class="glyphicon"></span> (See more)...
                    </button>
            <!-- Modal -->
                    <div class="modal" id="cell_@Model.ReferenceCode" role="dialog">
                        <div class="modal-dialog modal-lg">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                                    <h4 class="modal-title">
                                        @Model.Metadata.Title
                                    </h4>
                                </div>
                                <div class="modal-body" style="text-wrap:normal; word-wrap:break-word; text-align:left">
                                    @Model.Metadata.Description
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-md" data-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
                        }
                    }
@helper Files(IEnumerable<end_user_gui.Models.ArchiveFile> files)
{
foreach (var file in files)
{
        <div style="text-align:left">
            <a href="@{Output.Write(end_user_gui.Modules.Environment.Current().ArchiveRepository().FileUrl(Model.ReferenceCode, file.Path));}" t target="_blank">
                @file.Path
            </a>
            <span>&nbsp;(@SizeString(file.Size))</span>
        </div>
    }
}
<div class="row">
    <div class="col-md-1" style="text-align:left"><b>Contents</b></div>
    <div class="col-md-11 col-md-offset-0" style="">
        @{
            var maxFiles = 10;
            var relevantFiles = Model.Files.Where(f => f.Type == end_user_gui.Models.FileTypes.Data);
        }
        @Files(relevantFiles.Take(maxFiles))

        @if (relevantFiles.Count() > maxFiles)
        {
            <div style="text-align:left">
                <button type="button" class="btn btn-md btn-block" data-toggle="modal" data-target="#files_@Model.ReferenceCode" style="right:0">
                    <span class="glyphicon"></span>  (more files) ...
                </button>
            </div>
                <!-- Modal -->
            <div class="modal" id="files_@Model.ReferenceCode" role="dialog">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">
                                @Model.Metadata.Title
                            </h4>
                        </div>
                        <div class="modal-body" style="text-wrap:normal; word-wrap:break-word">
                            @Files(relevantFiles)
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-md" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>